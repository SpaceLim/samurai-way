[{"D:\\projects\\samurai\\src\\index.js":"1","D:\\projects\\samurai\\src\\App.js":"2","D:\\projects\\samurai\\src\\reportWebVitals.js":"3","D:\\projects\\samurai\\src\\serviceWorker.js":"4","D:\\projects\\samurai\\src\\components\\Profile\\Profile.jsx":"5","D:\\projects\\samurai\\src\\components\\Settings\\Settings.jsx":"6","D:\\projects\\samurai\\src\\components\\News\\News.jsx":"7","D:\\projects\\samurai\\src\\components\\Navbar\\Navbar.jsx":"8","D:\\projects\\samurai\\src\\components\\Music\\Music.jsx":"9","D:\\projects\\samurai\\src\\components\\Header\\Header.jsx":"10","D:\\projects\\samurai\\src\\components\\Dialogs\\Dialogs.jsx":"11","D:\\projects\\samurai\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.jsx":"12","D:\\projects\\samurai\\src\\components\\Profile\\MyPosts\\MyPosts.jsx":"13","D:\\projects\\samurai\\src\\components\\Navbar\\NavbarFriends\\Friends.jsx":"14","D:\\projects\\samurai\\src\\components\\Dialogs\\DialogItem\\DialogItem.jsx":"15","D:\\projects\\samurai\\src\\components\\Dialogs\\Message\\Message.jsx":"16","D:\\projects\\samurai\\src\\components\\Navbar\\NavbarFriends\\Friend\\friend.jsx":"17","D:\\projects\\samurai\\src\\components\\Profile\\MyPosts\\Post\\Post.jsx":"18","D:\\projects\\samurai\\src\\redux\\profile-reducer.js":"19","D:\\projects\\samurai\\src\\redux\\dialogs-reducer.js":"20","D:\\projects\\samurai\\src\\redux\\store.js":"21","D:\\projects\\samurai\\src\\redux\\redux-store.js":"22","D:\\projects\\samurai\\src\\redux\\sidebar-reducer.js":"23","D:\\projects\\samurai\\src\\components\\Profile\\MyPosts\\MyPostsContainer.jsx":"24","D:\\projects\\samurai\\src\\components\\Dialogs\\DialogsContainer.jsx":"25","D:\\projects\\samurai\\src\\components\\Navbar\\NavbarFriends\\FriendsContainer.js":"26","D:\\projects\\samurai\\src\\redux\\users-reducer.js":"27","D:\\projects\\samurai\\src\\components\\Users\\UsersContainer.jsx":"28","D:\\projects\\samurai\\src\\components\\Users\\Users.jsx":"29","D:\\projects\\samurai\\src\\components\\common\\Preloader\\Preloader.js":"30","D:\\projects\\samurai\\src\\components\\Profile\\ProfileContainer.jsx":"31","D:\\projects\\samurai\\src\\redux\\auth-reducer.js":"32","D:\\projects\\samurai\\src\\components\\Header\\HeaderContainer.jsx":"33","D:\\projects\\samurai\\src\\api\\api.js":"34","D:\\projects\\samurai\\src\\components\\Login\\Login.jsx":"35","D:\\projects\\samurai\\src\\hoc\\withAuthRedirect.js":"36","D:\\projects\\samurai\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.jsx":"37","D:\\projects\\samurai\\src\\utils\\validators\\validator.js":"38","D:\\projects\\samurai\\src\\components\\common\\FormsControls\\FormsControls.js":"39","D:\\projects\\samurai\\src\\components\\Dialogs\\AddMessageForm\\AddMessageForm.jsx":"40"},{"size":1005,"mtime":1608455889679,"results":"41","hashOfConfig":"42"},{"size":1520,"mtime":1610136972509,"results":"43","hashOfConfig":"42"},{"size":362,"mtime":499162500000,"results":"44","hashOfConfig":"45"},{"size":5086,"mtime":499126500000,"results":"46","hashOfConfig":"42"},{"size":439,"mtime":1610466239381,"results":"47","hashOfConfig":"42"},{"size":223,"mtime":1590921796000,"results":"48","hashOfConfig":"42"},{"size":202,"mtime":1590921608000,"results":"49","hashOfConfig":"42"},{"size":1177,"mtime":1608835665312,"results":"50","hashOfConfig":"42"},{"size":212,"mtime":1590921594000,"results":"51","hashOfConfig":"42"},{"size":487,"mtime":1610135368419,"results":"52","hashOfConfig":"42"},{"size":1137,"mtime":1610499258970,"results":"53","hashOfConfig":"42"},{"size":2962,"mtime":1610409370693,"results":"54","hashOfConfig":"42"},{"size":1390,"mtime":1610499631320,"results":"55","hashOfConfig":"42"},{"size":489,"mtime":1608398920827,"results":"56","hashOfConfig":"42"},{"size":341,"mtime":1607933102668,"results":"57","hashOfConfig":"42"},{"size":199,"mtime":1607908771633,"results":"58","hashOfConfig":"42"},{"size":250,"mtime":1594432402000,"results":"59","hashOfConfig":"42"},{"size":376,"mtime":1594408822000,"results":"60","hashOfConfig":"42"},{"size":1960,"mtime":1610468250337,"results":"61","hashOfConfig":"42"},{"size":921,"mtime":1610465599811,"results":"62","hashOfConfig":"42"},{"size":2270,"mtime":1608374961785,"results":"63","hashOfConfig":"42"},{"size":742,"mtime":1610455053384,"results":"64","hashOfConfig":"42"},{"size":634,"mtime":1608344718013,"results":"65","hashOfConfig":"42"},{"size":620,"mtime":1610468272452,"results":"66","hashOfConfig":"42"},{"size":711,"mtime":1610465599775,"results":"67","hashOfConfig":"42"},{"size":600,"mtime":1608399560333,"results":"68","hashOfConfig":"42"},{"size":4352,"mtime":1610048485699,"results":"69","hashOfConfig":"42"},{"size":2038,"mtime":1610288598021,"results":"70","hashOfConfig":"42"},{"size":2287,"mtime":1610046159693,"results":"71","hashOfConfig":"42"},{"size":214,"mtime":1608859320082,"results":"72","hashOfConfig":"42"},{"size":1200,"mtime":1610410134040,"results":"73","hashOfConfig":"42"},{"size":945,"mtime":1610464506944,"results":"74","hashOfConfig":"42"},{"size":582,"mtime":1610136216075,"results":"75","hashOfConfig":"42"},{"size":1473,"mtime":1610460571406,"results":"76","hashOfConfig":"42"},{"size":1250,"mtime":1610501826292,"results":"77","hashOfConfig":"42"},{"size":614,"mtime":1610224966765,"results":"78","hashOfConfig":"42"},{"size":1574,"mtime":1610452491145,"results":"79","hashOfConfig":"42"},{"size":292,"mtime":1610488668635,"results":"80","hashOfConfig":"42"},{"size":823,"mtime":1610502703882,"results":"81","hashOfConfig":"42"},{"size":825,"mtime":1610499987386,"results":"82","hashOfConfig":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},"28jg36",{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hwkzy5",{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"85"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"85"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"85"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"85"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"85"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"85"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"85"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"85"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"85"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"85"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"85"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},"D:\\projects\\samurai\\src\\index.js",[],["175","176"],"D:\\projects\\samurai\\src\\App.js",[],"D:\\projects\\samurai\\src\\reportWebVitals.js",[],"D:\\projects\\samurai\\src\\serviceWorker.js",[],"D:\\projects\\samurai\\src\\components\\Profile\\Profile.jsx",[],"D:\\projects\\samurai\\src\\components\\Settings\\Settings.jsx",[],"D:\\projects\\samurai\\src\\components\\News\\News.jsx",[],"D:\\projects\\samurai\\src\\components\\Navbar\\Navbar.jsx",[],"D:\\projects\\samurai\\src\\components\\Music\\Music.jsx",[],"D:\\projects\\samurai\\src\\components\\Header\\Header.jsx",[],"D:\\projects\\samurai\\src\\components\\Dialogs\\Dialogs.jsx",["177"],"import React from \"react\";\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {AddMessageFormRedux} from \"./AddMessageForm/AddMessageForm\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogsData.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id}/>);\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n   if (!props.isAuth) return <Redirect to={\"/login\"} />;\r\n\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n            </div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Dialogs;","D:\\projects\\samurai\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.jsx",["178"],"import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport Smile from \"./../../../assets/images/smile.png\";\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\nimport ProfileStatus from \"./ProfileStatus\"\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/*<div className={s.content}>*/}\r\n                {/*<img*/}\r\n                    {/*src=\"https://under35.me/wp-content/uploads/2016/09/%D0%9F%D0%B0%D1%80%D0%BA-%D1%80%D0%B0%D0%B7%D0%B2%D0%BB%D0%B5%D1%87%D0%B5%D0%BD%D0%B8%D0%B9-%D0%B2-%D0%94%D1%83%D0%B1%D0%B0%D0%B8-IMG-Worlds-of-Adventure-14.jpg\"*/}\r\n                    {/*alt=\"\"/>*/} \r\n            {/*</div>*/}\r\n               <div className={s.ava}><img src={props.profile.photos.large !=null ? props.profile.photos.large : userPhoto }  alt=\"\"/></div>\r\n            <div className={s.descriptionBlock}>\r\n                <h2>{props.profile.fullName}</h2>\r\n                <p>{props.profile.lookingForAJobDescription}</p>\r\n                {props.profile.lookingForAJob === true ?\r\n                    <div className={s.lookingForAJob}>\r\n                    <img  src={Smile}/>\r\n                    </div> :\r\n                    <p>I am look for a job</p>\r\n                }\r\n                <div className={s.contacts}>\r\n                    <ul>\r\n                        { props.profile.contacts.youtube !=null ? <li><a href={'https://' +  props.profile.contacts.youtube }>youtube</a></li> : ''}\r\n                        { props.profile.contacts.github !=null ? <li><a href={'https://' +  props.profile.contacts.github }>github</a></li> : ''}\r\n                        { props.profile.contacts.mainLink !=null ? <li><a href={'https://' +  props.profile.contacts.mainLink }>mainLink</a></li> : ''}\r\n                        { props.profile.contacts.instagram !=null ? <li><a href={'https://' +  props.profile.contacts.instagram }>instagram</a></li> : ''}\r\n                        { props.profile.contacts.twitter !=null ? <li><a href={'https://' +  props.profile.contacts.twitter }>twitter</a></li> : ''}\r\n                        { props.profile.contacts.vk !=null ? <li><a href={'https://' +  props.profile.contacts.vk }>vk</a></li> : ''}\r\n                        { props.profile.contacts.website !=null ? <li><a href={'https://' +  props.profile.contacts.website }>website</a></li> : ''}\r\n                        { props.profile.contacts.facebook !=null ? <li><a href={'https://' +  props.profile.contacts.facebook }>facebook</a></li> : ''}\r\n\r\n                    </ul>\r\n                </div>\r\n                <div className={s.about}>\r\n                    <p>{props.profile.aboutMe}</p>\r\n                </div>\r\n                <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","D:\\projects\\samurai\\src\\components\\Profile\\MyPosts\\MyPosts.jsx",["179"],"import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validator\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\n\r\n\r\nconst MyPosts = (props) => {\r\n    let postsElements = props.posts.map( p => <Post message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let addNewPost = (values) => {\r\n        debugger;\r\n        props.addPost(values.newPostBody);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.postBlock}>\r\n            <h3>My posts</h3>\r\n            <AddPostFormRedux onSubmit={addNewPost}/>\r\n            <div className={s.posts}>\r\n                { postsElements }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet addPost = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name='newPostBody' placeholder=\"Enter yor post\"\r\n                       validate={[required, maxLength10]} />\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddPostFormRedux = reduxForm({form: 'profileAddPost' })(addPost);\r\n\r\nexport default MyPosts;","D:\\projects\\samurai\\src\\components\\Navbar\\NavbarFriends\\Friends.jsx",[],"D:\\projects\\samurai\\src\\components\\Dialogs\\DialogItem\\DialogItem.jsx",[],"D:\\projects\\samurai\\src\\components\\Dialogs\\Message\\Message.jsx",[],"D:\\projects\\samurai\\src\\components\\Navbar\\NavbarFriends\\Friend\\friend.jsx",[],"D:\\projects\\samurai\\src\\components\\Profile\\MyPosts\\Post\\Post.jsx",[],"D:\\projects\\samurai\\src\\redux\\profile-reducer.js",[],"D:\\projects\\samurai\\src\\redux\\dialogs-reducer.js",[],"D:\\projects\\samurai\\src\\redux\\store.js",[],"D:\\projects\\samurai\\src\\redux\\redux-store.js",[],"D:\\projects\\samurai\\src\\redux\\sidebar-reducer.js",[],"D:\\projects\\samurai\\src\\components\\Profile\\MyPosts\\MyPostsContainer.jsx",["180"],"import React from 'react';\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst mapStateToProps= (state) =>{\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return {\r\n        updateNewPostText:  (text) => {\r\n            let action = (updateNewPostTextActionCreator(text));\r\n            dispatch(action);\r\n        },\r\n        addPost: (newPostBody) => {\r\n            dispatch(addPostActionCreator(newPostBody));\r\n\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostContainer;","D:\\projects\\samurai\\src\\components\\Dialogs\\DialogsContainer.jsx",["181","182"],"import React from \"react\";\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport { withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        },\r\n\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);\r\n\r\n\r\n","D:\\projects\\samurai\\src\\components\\Navbar\\NavbarFriends\\FriendsContainer.js",["183"],"D:\\projects\\samurai\\src\\redux\\users-reducer.js",["184","185","186"],"import {usersAPI} from \"../api/api\";\r\n\r\nconst FOLLOW = 'ADD-FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS= 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initioalState = {\r\n    users: [ ],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n}\r\n\r\n\r\nconst usersReducer = (state = initioalState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true};\r\n                    }\r\n                    return u;\r\n                    }),\r\n            }\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false};\r\n                    }\r\n                    return u;\r\n                }),\r\n            }\r\n\r\n        case SET_USERS: {\r\n            return { ...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return { ...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return { ...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return { ...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return { ...state,\r\n                followingInProgress: action.isFetching\r\n                    ?  [ ...state.followingInProgress, action.userId]\r\n                    :  [ ...state.followingInProgress.filter(id => id != action.userId) ]\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n\r\n        }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId})\r\n\r\nexport const getUsers = (currentPage, pageSize) => {\r\n    return  (dispatch) => {\r\n\r\n        dispatch(toggleIsFetching(true));\r\n\r\n        usersAPI.getUsers(currentPage, pageSize).then(data => {\r\n            dispatch(toggleIsFetching(false));\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setTotalUsersCount(data.totalCount));\r\n        });\r\n    }\r\n}\r\n\r\nexport const follow = (userId) => {\r\n\r\n    return  (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId));\r\n\r\n        usersAPI.followUser(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode == 0){\r\n                    dispatch(followSuccess(userId));\r\n                }\r\n                dispatch(toggleFollowingProgress(false, userId));\r\n            });\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n\r\n    return  (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId));\r\n\r\n        usersAPI.unfollowUser(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode == 0){\r\n                    dispatch(unfollowSuccess(userId));\r\n                }\r\n                dispatch(toggleFollowingProgress(false,userId));\r\n            });\r\n    };\r\n}\r\n\r\n\r\nexport default usersReducer;","D:\\projects\\samurai\\src\\components\\Users\\UsersContainer.jsx",["187","188","189","190","191"],"import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    setUsers,\r\n    setTotalUsersCount,\r\n    unfollow,\r\n    toggleIsFetching,\r\n    toggleFollowingProgress,\r\n    getUsers\r\n} from \"../../redux/users-reducer\";\r\nimport * as axios from \"axios\";\r\nimport Users from \"./Users\";\r\nimport preLoader from \"./../../assets/images/Loader.svg\"\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {usersAPI} from \"../../api/api\";\r\nimport { withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n\r\n        this.props.getUsers(pageNumber, this.props.pageSize);\r\n\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            { this.props.isFetching  ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                      pageSize={this.props.pageSize}\r\n                      currentPage={this.props.currentPage}\r\n                      onPageChanged={this.onPageChanged}\r\n                      users={this.props.users}\r\n                      follow={this.props.follow}\r\n                      unfollow={this.props.unfollow}\r\n                      followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress,\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps,\r\n        {follow, unfollow, setUsers, setCurrentPage, toggleFollowingProgress, getUsers: getUsers})\r\n) (UsersContainer)\r\n","D:\\projects\\samurai\\src\\components\\Users\\Users.jsx",["192","193"],"import React from 'react';\r\nimport styles from \"./users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport * as axios from \"axios\";\r\nimport {usersAPI} from \"../../api/api\";\r\n\r\nlet Users = (props) => {\r\n\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    return <div>\r\n        <div>\r\n            {pages.map(p => {\r\n                return <span className={props.currentPage === p && styles.selectedPage}\r\n                             onClick={(e) => {\r\n                                 props.onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n\r\n        </div>\r\n        {\r\n            props.users.map(u => <div key={u.id}>\r\n                <span>\r\n                    <div className={styles.userPhoto}>\r\n                        <NavLink to={'/profile/' + u.id}>\r\n                            <img src={u.photos.small !=null ? u.photos.small : userPhoto} alt=\"\"/>\r\n                        </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {u.followed\r\n                            ? <button disabled={props.followingInProgress\r\n                                .some(id => id === u.id )}\r\n                                      onClick={() => { props.unfollow(u.id) }}>\r\n                                Unfollow</button>\r\n                            : <button disabled={props.followingInProgress\r\n                                .some(id => id === u.id )}\r\n                                      onClick={() => { props.follow(u.id) }}>\r\n                                Follow</button>\r\n                        }\r\n                    </div>\r\n                </span>\r\n                    <span>\r\n                    <span>\r\n                        <div>{u.name}</div>\r\n                        <div>{u.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        {/*<div>{u.location.city}</div>*/}\r\n                        {/*<div>/!*{u.location.country}*!/</div>*/}\r\n                    </span>\r\n                </span>\r\n                </div>\r\n            )}\r\n    </div>\r\n}\r\n\r\nexport default Users;","D:\\projects\\samurai\\src\\components\\common\\Preloader\\Preloader.js",["194"],"import React from \"react\";\r\nimport preLoader from \"../../../assets/images/Loader.svg\";\r\n\r\nlet Preloader = (props) => {\r\n    return <div>\r\n        <img src={preLoader}/>\r\n    </div>\r\n\r\n}\r\n\r\nexport default Preloader;","D:\\projects\\samurai\\src\\components\\Profile\\ProfileContainer.jsx",["195","196","197"],"import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport * as axios from \"axios\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = 13485;\r\n        }\r\n\r\n        this.props.getUserProfile(userId);\r\n\r\n        this.props.getStatus(userId);\r\n       }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    // withAuthRedirect\r\n)(ProfileContainer);\r\n\r\n\r\n\r\n\r\n\r\n","D:\\projects\\samurai\\src\\redux\\auth-reducer.js",[],"D:\\projects\\samurai\\src\\components\\Header\\HeaderContainer.jsx",[],"D:\\projects\\samurai\\src\\api\\api.js",[],"D:\\projects\\samurai\\src\\components\\Login\\Login.jsx",[],"D:\\projects\\samurai\\src\\hoc\\withAuthRedirect.js",[],"D:\\projects\\samurai\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.jsx",["198","199","200"],"import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        });\r\n    }\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n}\r\ncomponentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status )\r\n        this.setState({\r\n            status: this.props.status\r\n        })\r\n\r\n        let a = this.state;\r\n        let b = this.props;\r\n        console.log('componentDidUpdate');\r\n}\r\n\r\n    render() {\r\n        console.log('render');\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                <div>\r\n                    <span onDoubleClick={this.activateEditMode}>{this.props.status || \"------\"}</span>\r\n                </div>\r\n                }\r\n                {this.state.editMode &&\r\n                <div>\r\n                    <input onChange={this.onStatusChange}\r\n                           autoFocus={true}\r\n                           onBlur={this.deactivateEditMode}\r\n                           value={this.state.status}></input>\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","D:\\projects\\samurai\\src\\utils\\validators\\validator.js",[],"D:\\projects\\samurai\\src\\components\\common\\FormsControls\\FormsControls.js",[],"D:\\projects\\samurai\\src\\components\\Dialogs\\AddMessageForm\\AddMessageForm.jsx",[],{"ruleId":"201","replacedBy":"202"},{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","severity":1,"message":"206","line":15,"column":9,"nodeType":"207","messageId":"208","endLine":15,"endColumn":23},{"ruleId":"209","severity":1,"message":"210","line":26,"column":21,"nodeType":"211","endLine":26,"endColumn":40},{"ruleId":"205","severity":1,"message":"212","line":13,"column":9,"nodeType":"207","messageId":"208","endLine":13,"endColumn":23},{"ruleId":"205","severity":1,"message":"213","line":1,"column":8,"nodeType":"207","messageId":"208","endLine":1,"endColumn":13},{"ruleId":"205","severity":1,"message":"213","line":1,"column":8,"nodeType":"207","messageId":"208","endLine":1,"endColumn":13},{"ruleId":"205","severity":1,"message":"214","line":5,"column":9,"nodeType":"207","messageId":"208","endLine":5,"endColumn":17},{"ruleId":"205","severity":1,"message":"215","line":2,"column":8,"nodeType":"207","messageId":"208","endLine":2,"endColumn":9},{"ruleId":"216","severity":1,"message":"217","line":62,"column":71,"nodeType":"218","messageId":"219","endLine":62,"endColumn":73},{"ruleId":"216","severity":1,"message":"220","line":100,"column":46,"nodeType":"218","messageId":"219","endLine":100,"endColumn":48},{"ruleId":"216","severity":1,"message":"220","line":115,"column":46,"nodeType":"218","messageId":"219","endLine":115,"endColumn":48},{"ruleId":"205","severity":1,"message":"221","line":7,"column":5,"nodeType":"207","messageId":"208","endLine":7,"endColumn":23},{"ruleId":"205","severity":1,"message":"222","line":9,"column":5,"nodeType":"207","messageId":"208","endLine":9,"endColumn":21},{"ruleId":"205","severity":1,"message":"223","line":13,"column":13,"nodeType":"207","messageId":"208","endLine":13,"endColumn":18},{"ruleId":"205","severity":1,"message":"224","line":15,"column":8,"nodeType":"207","messageId":"208","endLine":15,"endColumn":17},{"ruleId":"205","severity":1,"message":"225","line":17,"column":9,"nodeType":"207","messageId":"208","endLine":17,"endColumn":17},{"ruleId":"205","severity":1,"message":"223","line":5,"column":13,"nodeType":"207","messageId":"208","endLine":5,"endColumn":18},{"ruleId":"205","severity":1,"message":"225","line":6,"column":9,"nodeType":"207","messageId":"208","endLine":6,"endColumn":17},{"ruleId":"209","severity":1,"message":"210","line":6,"column":9,"nodeType":"211","endLine":6,"endColumn":31},{"ruleId":"205","severity":1,"message":"223","line":3,"column":13,"nodeType":"207","messageId":"208","endLine":3,"endColumn":18},{"ruleId":"205","severity":1,"message":"214","line":6,"column":9,"nodeType":"207","messageId":"208","endLine":6,"endColumn":17},{"ruleId":"205","severity":1,"message":"226","line":7,"column":9,"nodeType":"207","messageId":"208","endLine":7,"endColumn":25},{"ruleId":"205","severity":1,"message":"215","line":2,"column":8,"nodeType":"207","messageId":"208","endLine":2,"endColumn":9},{"ruleId":"205","severity":1,"message":"227","line":33,"column":13,"nodeType":"207","messageId":"208","endLine":33,"endColumn":14},{"ruleId":"205","severity":1,"message":"228","line":34,"column":13,"nodeType":"207","messageId":"208","endLine":34,"endColumn":14},"no-native-reassign",["229"],"no-negated-in-lhs",["230"],"no-unused-vars","'newMessageBody' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'newPostElement' is assigned a value but never used.","'React' is defined but never used.","'Redirect' is defined but never used.","'s' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'setTotalUsersCount' is defined but never used.","'toggleIsFetching' is defined but never used.","'axios' is defined but never used.","'preLoader' is defined but never used.","'usersAPI' is defined but never used.","'withAuthRedirect' is defined but never used.","'a' is assigned a value but never used.","'b' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]